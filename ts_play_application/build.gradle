apply plugin: 'com.android.application'
apply plugin: 'apk.pack.util'
// 时间
def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyy_MM_dd')
    return formattedDate
}

// 这里就是获取渠道名（cn_）然后截取后面的字符串，所以在前面定义多渠道的时候建议
// 统一使用cn_的形式
def buildFlavorName(String name) {
    int count = Integer.parseInt("${sameStringCount}")
    return name.substring(count)
}
// 软件的名字
def buildAppName() {
    return "TongsonPlay"
}

android {
    signingConfigs {
        debug {
            storeFile rootProject.file("keystore/debug.keystore")
        }
    }
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    defaultConfig {
        applicationId "pr.tongson"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "${APP_VERSION}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    productFlavors {
        devel {
//            applicationId "pr.tongson"
//            buildConfigField 'String', 'channel', '"渠道devel"'
//            buildConfigField "boolean", "REPORT_CRASHES", "true"
        }

        prod {
//            applicationId "pr.tongson"
//            buildConfigField 'String', 'channel', '"渠道prod"'
//            buildConfigField "boolean", "REPORT_CRASHES", "true"
        }

        cn_long {}

//        wandoujia {
//            manifestPlaceholders = [CHANNEL_VALUE: 'wandoujia', CHANNEL_ID: 200]
//        }
//        qihu360 {
//            manifestPlaceholders = [CHANNEL_VALUE: '360', CHANNEL_ID: 201]
//        }
//        baidu {
//            manifestPlaceholders = [CHANNEL_VALUE: 'baidu', CHANNEL_ID: 202]
//        }
    }

    buildTypes {
        release {
            minifyEnabled true
            // shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug

            // 文件名
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    if (output.outputFile != null && output.outputFile.name.endsWith('.apk')
                            && 'release'.equals(variant.buildType.name)) {
                        def channel = variant.flavorName.toString()
                        def apkfilename = "${buildTime()}_${buildAppName()}_V${variant.versionName}" +
                                "_CN_${buildFlavorName(channel)}_${variant.buildType.name}.apk";
                        def apkFile = new File(output.outputFile.getParent(), apkfilename)
                        output.outputFile = apkFile
                    }
                }
            }
        }
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }


}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.1'
    compile 'com.android.support:cardview-v7:25.0.1'
    compile 'com.android.support:recyclerview-v7:25.0.1'
    testCompile 'junit:junit:4.12'
    // 若使用annotation需要单独引用,对于tinker的其他库都无需再引用
    provided("com.tencent.tinker:tinker-android-anno:${TINKER_VERSION}") { changing = true }
    compile("com.tinkerpatch.sdk:tinkerpatch-android-sdk:${TINKERPATCH_VERSION}") { changing = true }
    compile "pr.Tongson:demo:1.0.0"

    compile 'com.isanwenyu.highlight:highlight:1.5.1'
}


repositories {
    maven{
        url "https://raw.githubusercontent.com/gepriniusce/hello-maven/master"
    }
}


apply from: 'tinkerpatch.gradle'

